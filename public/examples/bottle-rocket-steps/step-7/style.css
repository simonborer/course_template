html {
    box-sizing: border-box;
}
*,
*:before,
*:after {
    box-sizing: inherit;
}
/*
    Only style elements when you know
    for certain that these rules should
    always apply.
*/
img {
    /* Never allow images to be bigger
    than their parent */
    max-width: 100%;
}
nav ul {
    /* Nav lists don't need dots */
    list-style: none;
    display: flex;
    padding: 0;
    margin: 0;
}
nav li {
    margin: 0 .5rem;
}
/*
    A component is a discrete design pattern.
    A button is a great example.
*/
.button {
    color: white;
    background: black;
    padding: .5rem 2rem;
    margin: 2rem auto 0;
    display: inline-block;
    text-decoration: none;
    box-shadow: 2px 2px 2px #c4c4c4;
    /* This property maintains the
    width of an inline element when 
    the parent container is
    display: flex */
    align-self: flex-start;
}
.button:hover {
    text-decoration: underline;
    box-shadow: 3px 3px 2px #d3d3d3;
}
/*
    The :active pseudoclass applies when
    the element has been engaged. In this
    case, it is when the anchor is being
    clicked on.
*/
.button:active {
    box-shadow: 1px 1px 1px #c4c4c4;
}
.home-rule {
    height: 4px;
    width: 80%;
}
/* Layout */
.content {
    /* The 'auto' property for margins, applied
    horizontally, will center a block element */
    max-width: 80rem;
    margin-left: auto;
    margin-right: auto;
}
.columns {
    /* Columns will be 'stacked' and 
    centred on mobile */
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.column {
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.columns--three-col .image {
    order: -1;
}
.inverted {
    background: black;
    color: white;
}
.inverted .button {
    background: white;
    color: black;
}
.inverted a {
    color: white;
}
.inverted .home-rule {
    background-color: white;
}

/* Media queries */
@media (min-width: 48rem) {
    /* Columns will be side-by-each on desktop */
    .columns {
        flex-direction: row;
    }
    .column {
        justify-content: flex-start;
    }
    /* On desktop, the columns in the header
    are not even width, so we'll define their 
    widths here. */
    .header .column-one {
        flex-basis: 40%;
    }
    .header .column-two {
        flex-basis: 60%;
    }
    .columns--three-col .image {
        order: 0;
    }
}
